/* parser generated by jison 0.4.13 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var parser = (function(){
var parser = {trace: function trace(){},
yy: {},
symbols_: {"error":2,"expressions":3,"e":4,"EOF":5,"ADD":6,"SUB":7,"MUL":8,"FRAC":9,"SQRT":10,"POW":11,"LN":12,"LOG10":13,"LOGBASE1":14,"LOGBASE":15,"LPAREN":16,"RPAREN":17,"LCURL":18,"RCURL":19,"LSQ":20,"RSQ":21,"SIN":22,"COS":23,"TAN":24,"CSC":25,"SEC":26,"COT":27,"ARCSIN":28,"ARCCOS":29,"ARCTAN":30,"ARCCSC":31,"ARCSEC":32,"ARCCOT":33,"SINH":34,"COSH":35,"TANH":36,"CSCH":37,"SECH":38,"COTH":39,"EQUAL":40,"NUMBER":41,"VAR":42,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",6:"ADD",7:"SUB",8:"MUL",9:"FRAC",10:"SQRT",11:"POW",12:"LN",13:"LOG10",14:"LOGBASE1",15:"LOGBASE",16:"LPAREN",17:"RPAREN",18:"LCURL",19:"RCURL",20:"LSQ",21:"RSQ",22:"SIN",23:"COS",24:"TAN",25:"CSC",26:"SEC",27:"COT",28:"ARCSIN",29:"ARCCOS",30:"ARCTAN",31:"ARCCSC",32:"ARCSEC",33:"ARCCOT",34:"SINH",35:"COSH",36:"TANH",37:"CSCH",38:"SECH",39:"COTH",40:"EQUAL",41:"NUMBER",42:"VAR"},
productions_: [0,[3,2],[4,3],[4,3],[4,3],[4,3],[4,2],[4,3],[4,3],[4,2],[4,2],[4,2],[4,2],[4,3],[4,3],[4,3],[4,3],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,3],[4,1],[4,1]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
case 1:return $$[$0-1];
break;
case 2:this.$ = addNode(yy.MathNode.prototype.doAdd,$$[$0-2],$$[$0]);
break;
case 3:this.$ = addNode(yy.MathNode.prototype.doSub,$$[$0-2],$$[$0]);
break;
case 4:this.$ = addNode(yy.MathNode.prototype.doMul,$$[$0-2],$$[$0]);
break;
case 5:this.$ = addNode(yy.MathNode.prototype.doDiv,$$[$0-1],$$[$0]);
break;
case 6:this.$ = addNode(yy.MathNode.prototype.doSqrt,$$[$0]);
break;
case 7:this.$ = addNode(yy.MathNode.prototype.doNthRoot,$$[$0-1], $$[$0]);
break;
case 8:this.$ = addNode(yy.MathNode.prototype.doPow,$$[$0-2],$$[$0]);
break;
case 9:this.$ = -$$[$0];
break;
case 10:this.$ = addNode(yy.MathNode.prototype.doLn,$$[$0]);
break;
case 11:this.$ = addNode(yy.MathNode.prototype.doLog10,$$[$0]);
break;
case 12:this.$ = addNode(yy.MathNode.prototype.doLogBase,$$[$0-1],$$[$0]);
break;
case 13:this.$ = addNode(yy.MathNode.prototype.doLogBase,$$[$0-1],$$[$0]);
break;
case 14:this.$ = addNode(yy.MathNode.prototype.doParen,$$[$0-1]);
break;
case 15:this.$ = addNode(yy.MathNode.prototype.doParen,$$[$0-1]);
break;
case 16:this.$ = addNode(yy.MathNode.prototype.doParen,$$[$0-1]);
break;
case 17:this.$ = addNode(yy.MathNode.prototype.doSin,$$[$0]);
break;
case 18:this.$ = addNode(yy.MathNode.prototype.doCos,$$[$0]);
break;
case 19:this.$ = addNode(yy.MathNode.prototype.doTan,$$[$0]);
break;
case 20:this.$ = addNode(yy.MathNode.prototype.doCsc,$$[$0]);
break;
case 21:this.$ = addNode(yy.MathNode.prototype.doSec,$$[$0]);
break;
case 22:this.$ = addNode(yy.MathNode.prototype.doCot,$$[$0]);
break;
case 23:this.$ = addNode(yy.MathNode.prototype.doArcSin,$$[$0]);
break;
case 24:this.$ = addNode(yy.MathNode.prototype.doArcCos,$$[$0]);
break;
case 25:this.$ = addNode(yy.MathNode.prototype.doArcTan,$$[$0]);
break;
case 26:this.$ = addNode(yy.MathNode.prototype.doArcCsc,$$[$0]);
break;
case 27:this.$ = addNode(yy.MathNode.prototype.doArcSec,$$[$0]);
break;
case 28:this.$ = addNode(yy.MathNode.prototype.doArcCot,$$[$0]);
break;
case 29:this.$ = addNode(yy.MathNode.prototype.doSinh,$$[$0]);
break;
case 30:this.$ = addNode(yy.MathNode.prototype.doCosh,$$[$0]);
break;
case 31:this.$ = addNode(yy.MathNode.prototype.doTanh,$$[$0]);
break;
case 32:this.$ = addNode(yy.MathNode.prototype.doCsch,$$[$0]);
break;
case 33:this.$ = addNode(yy.MathNode.prototype.doSech,$$[$0]);
break;
case 34:this.$ = addNode(yy.MathNode.prototype.doCoth,$$[$0]);
break;
case 35:this.$ = addNode(yy.MathNode.prototype.doAssign,$$[$0-2],$$[$0]);
break;
case 36:this.$ = addNode(yy.MathNode.prototype.doNumber, yytext);
break;
case 37:this.$ = addNode(yy.MathNode.prototype.doVar, yytext);
break;
}
},
table: [{3:1,4:2,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{1:[3]},{5:[1,33],6:[1,34],7:[1,35],8:[1,36],11:[1,37],40:[1,38]},{4:39,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:40,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:41,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:42,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:43,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:44,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:45,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:46,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:47,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:48,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:49,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:50,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:51,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:52,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:53,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:54,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:55,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:56,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:57,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:58,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:59,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:60,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:61,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:62,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:63,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:64,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:65,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:66,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{5:[2,36],6:[2,36],7:[2,36],8:[2,36],9:[2,36],10:[2,36],11:[2,36],12:[2,36],13:[2,36],14:[2,36],15:[2,36],16:[2,36],17:[2,36],18:[2,36],19:[2,36],20:[2,36],21:[2,36],22:[2,36],23:[2,36],24:[2,36],25:[2,36],26:[2,36],27:[2,36],28:[2,36],29:[2,36],30:[2,36],31:[2,36],32:[2,36],33:[2,36],34:[2,36],35:[2,36],36:[2,36],37:[2,36],38:[2,36],39:[2,36],40:[2,36],41:[2,36],42:[2,36]},{5:[2,37],6:[2,37],7:[2,37],8:[2,37],9:[2,37],10:[2,37],11:[2,37],12:[2,37],13:[2,37],14:[2,37],15:[2,37],16:[2,37],17:[2,37],18:[2,37],19:[2,37],20:[2,37],21:[2,37],22:[2,37],23:[2,37],24:[2,37],25:[2,37],26:[2,37],27:[2,37],28:[2,37],29:[2,37],30:[2,37],31:[2,37],32:[2,37],33:[2,37],34:[2,37],35:[2,37],36:[2,37],37:[2,37],38:[2,37],39:[2,37],40:[2,37],41:[2,37],42:[2,37]},{1:[2,1]},{4:67,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:68,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:69,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:70,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:71,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{4:72,6:[1,34],7:[1,73],8:[1,36],9:[1,3],10:[1,4],11:[1,37],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],40:[1,38],41:[1,31],42:[1,32]},{4:74,5:[2,6],6:[2,6],7:[2,6],8:[2,6],9:[2,6],10:[1,4],11:[1,37],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],17:[2,6],18:[1,11],19:[2,6],20:[1,12],21:[2,6],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],40:[1,38],41:[1,31],42:[1,32]},{5:[2,9],6:[2,9],7:[2,9],8:[2,9],9:[2,9],10:[2,9],11:[2,9],12:[2,9],13:[2,9],14:[2,9],15:[2,9],16:[2,9],17:[2,9],18:[2,9],19:[2,9],20:[2,9],21:[2,9],22:[2,9],23:[2,9],24:[2,9],25:[2,9],26:[2,9],27:[2,9],28:[2,9],29:[2,9],30:[2,9],31:[2,9],32:[2,9],33:[2,9],34:[2,9],35:[2,9],36:[2,9],37:[2,9],38:[2,9],39:[2,9],40:[1,38],41:[2,9],42:[2,9]},{5:[2,10],6:[2,10],7:[2,10],8:[2,10],9:[2,10],10:[2,10],11:[2,10],12:[2,10],13:[2,10],14:[2,10],15:[2,10],16:[2,10],17:[2,10],18:[2,10],19:[2,10],20:[2,10],21:[2,10],22:[2,10],23:[2,10],24:[2,10],25:[2,10],26:[2,10],27:[2,10],28:[2,10],29:[2,10],30:[2,10],31:[2,10],32:[2,10],33:[2,10],34:[2,10],35:[2,10],36:[2,10],37:[2,10],38:[2,10],39:[2,10],40:[1,38],41:[2,10],42:[2,10]},{5:[2,11],6:[2,11],7:[2,11],8:[2,11],9:[2,11],10:[2,11],11:[2,11],12:[2,11],13:[2,11],14:[2,11],15:[2,11],16:[2,11],17:[2,11],18:[2,11],19:[2,11],20:[2,11],21:[2,11],22:[2,11],23:[2,11],24:[2,11],25:[2,11],26:[2,11],27:[2,11],28:[2,11],29:[2,11],30:[2,11],31:[2,11],32:[2,11],33:[2,11],34:[2,11],35:[2,11],36:[2,11],37:[2,11],38:[2,11],39:[2,11],40:[1,38],41:[2,11],42:[2,11]},{5:[2,12],6:[2,12],7:[2,12],8:[2,12],9:[2,12],10:[2,12],11:[2,12],12:[2,12],13:[2,12],14:[2,12],15:[2,12],16:[2,12],17:[2,12],18:[2,12],19:[2,12],20:[2,12],21:[2,12],22:[2,12],23:[2,12],24:[2,12],25:[2,12],26:[2,12],27:[2,12],28:[2,12],29:[2,12],30:[2,12],31:[2,12],32:[2,12],33:[2,12],34:[2,12],35:[2,12],36:[2,12],37:[2,12],38:[2,12],39:[2,12],40:[1,38],41:[2,12],42:[2,12]},{4:75,6:[1,34],7:[1,73],8:[1,36],9:[1,3],10:[1,4],11:[1,37],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],40:[1,38],41:[1,31],42:[1,32]},{6:[1,34],7:[1,35],8:[1,36],11:[1,37],17:[1,76],40:[1,38]},{6:[1,34],7:[1,35],8:[1,36],11:[1,37],19:[1,77],40:[1,38]},{6:[1,34],7:[1,35],8:[1,36],11:[1,37],21:[1,78],40:[1,38]},{5:[2,17],6:[2,17],7:[2,17],8:[2,17],9:[2,17],10:[2,17],11:[2,17],12:[2,17],13:[2,17],14:[2,17],15:[2,17],16:[2,17],17:[2,17],18:[2,17],19:[2,17],20:[2,17],21:[2,17],22:[2,17],23:[2,17],24:[2,17],25:[2,17],26:[2,17],27:[2,17],28:[2,17],29:[2,17],30:[2,17],31:[2,17],32:[2,17],33:[2,17],34:[2,17],35:[2,17],36:[2,17],37:[2,17],38:[2,17],39:[2,17],40:[1,38],41:[2,17],42:[2,17]},{5:[2,18],6:[2,18],7:[2,18],8:[2,18],9:[2,18],10:[2,18],11:[2,18],12:[2,18],13:[2,18],14:[2,18],15:[2,18],16:[2,18],17:[2,18],18:[2,18],19:[2,18],20:[2,18],21:[2,18],22:[2,18],23:[2,18],24:[2,18],25:[2,18],26:[2,18],27:[2,18],28:[2,18],29:[2,18],30:[2,18],31:[2,18],32:[2,18],33:[2,18],34:[2,18],35:[2,18],36:[2,18],37:[2,18],38:[2,18],39:[2,18],40:[1,38],41:[2,18],42:[2,18]},{5:[2,19],6:[2,19],7:[2,19],8:[2,19],9:[2,19],10:[2,19],11:[2,19],12:[2,19],13:[2,19],14:[2,19],15:[2,19],16:[2,19],17:[2,19],18:[2,19],19:[2,19],20:[2,19],21:[2,19],22:[2,19],23:[2,19],24:[2,19],25:[2,19],26:[2,19],27:[2,19],28:[2,19],29:[2,19],30:[2,19],31:[2,19],32:[2,19],33:[2,19],34:[2,19],35:[2,19],36:[2,19],37:[2,19],38:[2,19],39:[2,19],40:[1,38],41:[2,19],42:[2,19]},{5:[2,20],6:[2,20],7:[2,20],8:[2,20],9:[2,20],10:[2,20],11:[2,20],12:[2,20],13:[2,20],14:[2,20],15:[2,20],16:[2,20],17:[2,20],18:[2,20],19:[2,20],20:[2,20],21:[2,20],22:[2,20],23:[2,20],24:[2,20],25:[2,20],26:[2,20],27:[2,20],28:[2,20],29:[2,20],30:[2,20],31:[2,20],32:[2,20],33:[2,20],34:[2,20],35:[2,20],36:[2,20],37:[2,20],38:[2,20],39:[2,20],40:[1,38],41:[2,20],42:[2,20]},{5:[2,21],6:[2,21],7:[2,21],8:[2,21],9:[2,21],10:[2,21],11:[2,21],12:[2,21],13:[2,21],14:[2,21],15:[2,21],16:[2,21],17:[2,21],18:[2,21],19:[2,21],20:[2,21],21:[2,21],22:[2,21],23:[2,21],24:[2,21],25:[2,21],26:[2,21],27:[2,21],28:[2,21],29:[2,21],30:[2,21],31:[2,21],32:[2,21],33:[2,21],34:[2,21],35:[2,21],36:[2,21],37:[2,21],38:[2,21],39:[2,21],40:[1,38],41:[2,21],42:[2,21]},{5:[2,22],6:[2,22],7:[2,22],8:[2,22],9:[2,22],10:[2,22],11:[2,22],12:[2,22],13:[2,22],14:[2,22],15:[2,22],16:[2,22],17:[2,22],18:[2,22],19:[2,22],20:[2,22],21:[2,22],22:[2,22],23:[2,22],24:[2,22],25:[2,22],26:[2,22],27:[2,22],28:[2,22],29:[2,22],30:[2,22],31:[2,22],32:[2,22],33:[2,22],34:[2,22],35:[2,22],36:[2,22],37:[2,22],38:[2,22],39:[2,22],40:[1,38],41:[2,22],42:[2,22]},{5:[2,23],6:[2,23],7:[2,23],8:[2,23],9:[2,23],10:[2,23],11:[2,23],12:[2,23],13:[2,23],14:[2,23],15:[2,23],16:[2,23],17:[2,23],18:[2,23],19:[2,23],20:[2,23],21:[2,23],22:[2,23],23:[2,23],24:[2,23],25:[2,23],26:[2,23],27:[2,23],28:[2,23],29:[2,23],30:[2,23],31:[2,23],32:[2,23],33:[2,23],34:[2,23],35:[2,23],36:[2,23],37:[2,23],38:[2,23],39:[2,23],40:[1,38],41:[2,23],42:[2,23]},{5:[2,24],6:[2,24],7:[2,24],8:[2,24],9:[2,24],10:[2,24],11:[2,24],12:[2,24],13:[2,24],14:[2,24],15:[2,24],16:[2,24],17:[2,24],18:[2,24],19:[2,24],20:[2,24],21:[2,24],22:[2,24],23:[2,24],24:[2,24],25:[2,24],26:[2,24],27:[2,24],28:[2,24],29:[2,24],30:[2,24],31:[2,24],32:[2,24],33:[2,24],34:[2,24],35:[2,24],36:[2,24],37:[2,24],38:[2,24],39:[2,24],40:[1,38],41:[2,24],42:[2,24]},{5:[2,25],6:[2,25],7:[2,25],8:[2,25],9:[2,25],10:[2,25],11:[2,25],12:[2,25],13:[2,25],14:[2,25],15:[2,25],16:[2,25],17:[2,25],18:[2,25],19:[2,25],20:[2,25],21:[2,25],22:[2,25],23:[2,25],24:[2,25],25:[2,25],26:[2,25],27:[2,25],28:[2,25],29:[2,25],30:[2,25],31:[2,25],32:[2,25],33:[2,25],34:[2,25],35:[2,25],36:[2,25],37:[2,25],38:[2,25],39:[2,25],40:[1,38],41:[2,25],42:[2,25]},{5:[2,26],6:[2,26],7:[2,26],8:[2,26],9:[2,26],10:[2,26],11:[2,26],12:[2,26],13:[2,26],14:[2,26],15:[2,26],16:[2,26],17:[2,26],18:[2,26],19:[2,26],20:[2,26],21:[2,26],22:[2,26],23:[2,26],24:[2,26],25:[2,26],26:[2,26],27:[2,26],28:[2,26],29:[2,26],30:[2,26],31:[2,26],32:[2,26],33:[2,26],34:[2,26],35:[2,26],36:[2,26],37:[2,26],38:[2,26],39:[2,26],40:[1,38],41:[2,26],42:[2,26]},{5:[2,27],6:[2,27],7:[2,27],8:[2,27],9:[2,27],10:[2,27],11:[2,27],12:[2,27],13:[2,27],14:[2,27],15:[2,27],16:[2,27],17:[2,27],18:[2,27],19:[2,27],20:[2,27],21:[2,27],22:[2,27],23:[2,27],24:[2,27],25:[2,27],26:[2,27],27:[2,27],28:[2,27],29:[2,27],30:[2,27],31:[2,27],32:[2,27],33:[2,27],34:[2,27],35:[2,27],36:[2,27],37:[2,27],38:[2,27],39:[2,27],40:[1,38],41:[2,27],42:[2,27]},{5:[2,28],6:[2,28],7:[2,28],8:[2,28],9:[2,28],10:[2,28],11:[2,28],12:[2,28],13:[2,28],14:[2,28],15:[2,28],16:[2,28],17:[2,28],18:[2,28],19:[2,28],20:[2,28],21:[2,28],22:[2,28],23:[2,28],24:[2,28],25:[2,28],26:[2,28],27:[2,28],28:[2,28],29:[2,28],30:[2,28],31:[2,28],32:[2,28],33:[2,28],34:[2,28],35:[2,28],36:[2,28],37:[2,28],38:[2,28],39:[2,28],40:[1,38],41:[2,28],42:[2,28]},{5:[2,29],6:[2,29],7:[2,29],8:[2,29],9:[2,29],10:[2,29],11:[2,29],12:[2,29],13:[2,29],14:[2,29],15:[2,29],16:[2,29],17:[2,29],18:[2,29],19:[2,29],20:[2,29],21:[2,29],22:[2,29],23:[2,29],24:[2,29],25:[2,29],26:[2,29],27:[2,29],28:[2,29],29:[2,29],30:[2,29],31:[2,29],32:[2,29],33:[2,29],34:[2,29],35:[2,29],36:[2,29],37:[2,29],38:[2,29],39:[2,29],40:[1,38],41:[2,29],42:[2,29]},{5:[2,30],6:[2,30],7:[2,30],8:[2,30],9:[2,30],10:[2,30],11:[2,30],12:[2,30],13:[2,30],14:[2,30],15:[2,30],16:[2,30],17:[2,30],18:[2,30],19:[2,30],20:[2,30],21:[2,30],22:[2,30],23:[2,30],24:[2,30],25:[2,30],26:[2,30],27:[2,30],28:[2,30],29:[2,30],30:[2,30],31:[2,30],32:[2,30],33:[2,30],34:[2,30],35:[2,30],36:[2,30],37:[2,30],38:[2,30],39:[2,30],40:[1,38],41:[2,30],42:[2,30]},{5:[2,31],6:[2,31],7:[2,31],8:[2,31],9:[2,31],10:[2,31],11:[2,31],12:[2,31],13:[2,31],14:[2,31],15:[2,31],16:[2,31],17:[2,31],18:[2,31],19:[2,31],20:[2,31],21:[2,31],22:[2,31],23:[2,31],24:[2,31],25:[2,31],26:[2,31],27:[2,31],28:[2,31],29:[2,31],30:[2,31],31:[2,31],32:[2,31],33:[2,31],34:[2,31],35:[2,31],36:[2,31],37:[2,31],38:[2,31],39:[2,31],40:[1,38],41:[2,31],42:[2,31]},{5:[2,32],6:[2,32],7:[2,32],8:[2,32],9:[2,32],10:[2,32],11:[2,32],12:[2,32],13:[2,32],14:[2,32],15:[2,32],16:[2,32],17:[2,32],18:[2,32],19:[2,32],20:[2,32],21:[2,32],22:[2,32],23:[2,32],24:[2,32],25:[2,32],26:[2,32],27:[2,32],28:[2,32],29:[2,32],30:[2,32],31:[2,32],32:[2,32],33:[2,32],34:[2,32],35:[2,32],36:[2,32],37:[2,32],38:[2,32],39:[2,32],40:[1,38],41:[2,32],42:[2,32]},{5:[2,33],6:[2,33],7:[2,33],8:[2,33],9:[2,33],10:[2,33],11:[2,33],12:[2,33],13:[2,33],14:[2,33],15:[2,33],16:[2,33],17:[2,33],18:[2,33],19:[2,33],20:[2,33],21:[2,33],22:[2,33],23:[2,33],24:[2,33],25:[2,33],26:[2,33],27:[2,33],28:[2,33],29:[2,33],30:[2,33],31:[2,33],32:[2,33],33:[2,33],34:[2,33],35:[2,33],36:[2,33],37:[2,33],38:[2,33],39:[2,33],40:[1,38],41:[2,33],42:[2,33]},{5:[2,34],6:[2,34],7:[2,34],8:[2,34],9:[2,34],10:[2,34],11:[2,34],12:[2,34],13:[2,34],14:[2,34],15:[2,34],16:[2,34],17:[2,34],18:[2,34],19:[2,34],20:[2,34],21:[2,34],22:[2,34],23:[2,34],24:[2,34],25:[2,34],26:[2,34],27:[2,34],28:[2,34],29:[2,34],30:[2,34],31:[2,34],32:[2,34],33:[2,34],34:[2,34],35:[2,34],36:[2,34],37:[2,34],38:[2,34],39:[2,34],40:[1,38],41:[2,34],42:[2,34]},{5:[2,2],6:[2,2],7:[2,2],8:[1,36],9:[2,2],10:[2,2],11:[1,37],12:[2,2],13:[2,2],14:[2,2],15:[2,2],16:[2,2],17:[2,2],18:[2,2],19:[2,2],20:[2,2],21:[2,2],22:[2,2],23:[2,2],24:[2,2],25:[2,2],26:[2,2],27:[2,2],28:[2,2],29:[2,2],30:[2,2],31:[2,2],32:[2,2],33:[2,2],34:[2,2],35:[2,2],36:[2,2],37:[2,2],38:[2,2],39:[2,2],40:[1,38],41:[2,2],42:[2,2]},{5:[2,3],6:[2,3],7:[2,3],8:[1,36],9:[2,3],10:[2,3],11:[1,37],12:[2,3],13:[2,3],14:[2,3],15:[2,3],16:[2,3],17:[2,3],18:[2,3],19:[2,3],20:[2,3],21:[2,3],22:[2,3],23:[2,3],24:[2,3],25:[2,3],26:[2,3],27:[2,3],28:[2,3],29:[2,3],30:[2,3],31:[2,3],32:[2,3],33:[2,3],34:[2,3],35:[2,3],36:[2,3],37:[2,3],38:[2,3],39:[2,3],40:[1,38],41:[2,3],42:[2,3]},{5:[2,4],6:[2,4],7:[2,4],8:[2,4],9:[2,4],10:[2,4],11:[1,37],12:[2,4],13:[2,4],14:[2,4],15:[2,4],16:[2,4],17:[2,4],18:[2,4],19:[2,4],20:[2,4],21:[2,4],22:[2,4],23:[2,4],24:[2,4],25:[2,4],26:[2,4],27:[2,4],28:[2,4],29:[2,4],30:[2,4],31:[2,4],32:[2,4],33:[2,4],34:[2,4],35:[2,4],36:[2,4],37:[2,4],38:[2,4],39:[2,4],40:[1,38],41:[2,4],42:[2,4]},{5:[2,8],6:[2,8],7:[2,8],8:[2,8],9:[2,8],10:[2,8],11:[1,37],12:[2,8],13:[2,8],14:[2,8],15:[2,8],16:[2,8],17:[2,8],18:[2,8],19:[2,8],20:[2,8],21:[2,8],22:[2,8],23:[2,8],24:[2,8],25:[2,8],26:[2,8],27:[2,8],28:[2,8],29:[2,8],30:[2,8],31:[2,8],32:[2,8],33:[2,8],34:[2,8],35:[2,8],36:[2,8],37:[2,8],38:[2,8],39:[2,8],40:[1,38],41:[2,8],42:[2,8]},{5:[2,35],6:[1,34],7:[1,35],8:[1,36],9:[2,35],10:[2,35],11:[1,37],12:[2,35],13:[2,35],14:[2,35],15:[2,35],16:[2,35],17:[2,35],18:[2,35],19:[2,35],20:[2,35],21:[2,35],22:[2,35],23:[2,35],24:[2,35],25:[2,35],26:[2,35],27:[2,35],28:[2,35],29:[2,35],30:[2,35],31:[2,35],32:[2,35],33:[2,35],34:[2,35],35:[2,35],36:[2,35],37:[2,35],38:[2,35],39:[2,35],40:[1,38],41:[2,35],42:[2,35]},{5:[2,5],6:[2,5],7:[2,5],8:[2,5],9:[2,5],10:[2,5],11:[1,37],12:[2,5],13:[2,5],14:[2,5],15:[2,5],16:[2,5],17:[2,5],18:[2,5],19:[2,5],20:[2,5],21:[2,5],22:[2,5],23:[2,5],24:[2,5],25:[2,5],26:[2,5],27:[2,5],28:[2,5],29:[2,5],30:[2,5],31:[2,5],32:[2,5],33:[2,5],34:[2,5],35:[2,5],36:[2,5],37:[2,5],38:[2,5],39:[2,5],40:[1,38],41:[2,5],42:[2,5]},{4:79,7:[1,5],9:[1,3],10:[1,4],12:[1,6],13:[1,7],14:[1,8],15:[1,9],16:[1,10],18:[1,11],20:[1,12],22:[1,13],23:[1,14],24:[1,15],25:[1,16],26:[1,17],27:[1,18],28:[1,19],29:[1,20],30:[1,21],31:[1,22],32:[1,23],33:[1,24],34:[1,25],35:[1,26],36:[1,27],37:[1,28],38:[1,29],39:[1,30],41:[1,31],42:[1,32]},{5:[2,7],6:[2,7],7:[2,7],8:[2,7],9:[2,7],10:[2,7],11:[1,37],12:[2,7],13:[2,7],14:[2,7],15:[2,7],16:[2,7],17:[2,7],18:[2,7],19:[2,7],20:[2,7],21:[2,7],22:[2,7],23:[2,7],24:[2,7],25:[2,7],26:[2,7],27:[2,7],28:[2,7],29:[2,7],30:[2,7],31:[2,7],32:[2,7],33:[2,7],34:[2,7],35:[2,7],36:[2,7],37:[2,7],38:[2,7],39:[2,7],40:[1,38],41:[2,7],42:[2,7]},{5:[2,13],6:[2,13],7:[2,13],8:[2,13],9:[2,13],10:[2,13],11:[2,13],12:[2,13],13:[2,13],14:[2,13],15:[2,13],16:[2,13],17:[2,13],18:[2,13],19:[2,13],20:[2,13],21:[2,13],22:[2,13],23:[2,13],24:[2,13],25:[2,13],26:[2,13],27:[2,13],28:[2,13],29:[2,13],30:[2,13],31:[2,13],32:[2,13],33:[2,13],34:[2,13],35:[2,13],36:[2,13],37:[2,13],38:[2,13],39:[2,13],40:[1,38],41:[2,13],42:[2,13]},{5:[2,14],6:[2,14],7:[2,14],8:[2,14],9:[2,14],10:[2,14],11:[2,14],12:[2,14],13:[2,14],14:[2,14],15:[2,14],16:[2,14],17:[2,14],18:[2,14],19:[2,14],20:[2,14],21:[2,14],22:[2,14],23:[2,14],24:[2,14],25:[2,14],26:[2,14],27:[2,14],28:[2,14],29:[2,14],30:[2,14],31:[2,14],32:[2,14],33:[2,14],34:[2,14],35:[2,14],36:[2,14],37:[2,14],38:[2,14],39:[2,14],40:[2,14],41:[2,14],42:[2,14]},{5:[2,15],6:[2,15],7:[2,15],8:[2,15],9:[2,15],10:[2,15],11:[2,15],12:[2,15],13:[2,15],14:[2,15],15:[2,15],16:[2,15],17:[2,15],18:[2,15],19:[2,15],20:[2,15],21:[2,15],22:[2,15],23:[2,15],24:[2,15],25:[2,15],26:[2,15],27:[2,15],28:[2,15],29:[2,15],30:[2,15],31:[2,15],32:[2,15],33:[2,15],34:[2,15],35:[2,15],36:[2,15],37:[2,15],38:[2,15],39:[2,15],40:[2,15],41:[2,15],42:[2,15]},{5:[2,16],6:[2,16],7:[2,16],8:[2,16],9:[2,16],10:[2,16],11:[2,16],12:[2,16],13:[2,16],14:[2,16],15:[2,16],16:[2,16],17:[2,16],18:[2,16],19:[2,16],20:[2,16],21:[2,16],22:[2,16],23:[2,16],24:[2,16],25:[2,16],26:[2,16],27:[2,16],28:[2,16],29:[2,16],30:[2,16],31:[2,16],32:[2,16],33:[2,16],34:[2,16],35:[2,16],36:[2,16],37:[2,16],38:[2,16],39:[2,16],40:[2,16],41:[2,16],42:[2,16]},{5:[2,3],6:[2,3],7:[2,3],8:[2,9],9:[2,3],10:[2,3],11:[2,9],12:[2,3],13:[2,3],14:[2,3],15:[2,3],16:[2,3],17:[2,3],18:[2,3],19:[2,3],20:[2,3],21:[2,3],22:[2,3],23:[2,3],24:[2,3],25:[2,3],26:[2,3],27:[2,3],28:[2,3],29:[2,3],30:[2,3],31:[2,3],32:[2,3],33:[2,3],34:[2,3],35:[2,3],36:[2,3],37:[2,3],38:[2,3],39:[2,3],40:[1,38],41:[2,3],42:[2,3]}],
defaultActions: {33:[2,1]},
parseError: function parseError(str,hash){if(hash.recoverable){this.trace(str)}else{throw new Error(str)}},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    var args = lstack.slice.call(arguments, 1);
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == 'undefined') {
        this.lexer.yylloc = {};
    }
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === 'function') {
        this.parseError = this.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || EOF;
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
                    if (typeof action === 'undefined' || !action.length || !action[0]) {
                var errStr = '';
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push('\'' + this.terminals_[p] + '\'');
                    }
                }
                if (this.lexer.showPosition) {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\n' + this.lexer.showPosition() + '\nExpecting ' + expected.join(', ') + ', got \'' + (this.terminals_[symbol] || symbol) + '\'';
                } else {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\'' + (this.terminals_[symbol] || symbol) + '\'');
                }
                this.parseError(errStr, {
                    text: this.lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: this.lexer.yylineno,
                    loc: yyloc,
                    expected: expected
                });
            }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0) {
                    recovering--;
                }
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {
                first_line: lstack[lstack.length - (len || 1)].first_line,
                last_line: lstack[lstack.length - 1].last_line,
                first_column: lstack[lstack.length - (len || 1)].first_column,
                last_column: lstack[lstack.length - 1].last_column
            };
            if (ranges) {
                yyval._$.range = [
                    lstack[lstack.length - (len || 1)].range[0],
                    lstack[lstack.length - 1].range[1]
                ];
            }
            r = this.performAction.apply(yyval, [
                yytext,
                yyleng,
                yylineno,
                this.yy,
                action[1],
                vstack,
                lstack
            ].concat(args));
            if (typeof r !== 'undefined') {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}};


    /* generated by jison-lex 0.2.1 */
var lexer = (function(){
var lexer = {

EOF:1,

parseError:function parseError(str,hash){
"use strict";
if(this.yy.parser){this.yy.parser.parseError(str,hash)}else{throw new Error(str)}},

// resets the lexer, sets new input
setInput:function (input){
"use strict";
this._input=input;this._more=this._backtrack=this.done=false;this.yylineno=this.yyleng=0;this.yytext=this.matched=this.match="";this.conditionStack=["INITIAL"];this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0};if(this.options.ranges){this.yylloc.range=[0,0]}this.offset=0;return this},

// consumes and returns one char from the input
input:function (){
"use strict";
var ch=this._input[0];this.yytext+=ch;this.yyleng++;this.offset++;this.match+=ch;this.matched+=ch;var lines=ch.match(/(?:\r\n?|\n).*/g);if(lines){this.yylineno++;this.yylloc.last_line++}else{this.yylloc.last_column++}if(this.options.ranges){this.yylloc.range[1]++}this._input=this._input.slice(1);return ch},

// unshifts one char (or a string) into the input
unput:function (ch){
"use strict";
var len=ch.length;var lines=ch.split(/(?:\r\n?|\n)/g);this._input=ch+this._input;this.yytext=this.yytext.substr(0,this.yytext.length-len-1);this.offset-=len;var oldLines=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1);this.matched=this.matched.substr(0,this.matched.length-1);if(lines.length-1){this.yylineno-=lines.length-1}var r=this.yylloc.range;this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:lines?(lines.length===oldLines.length?this.yylloc.first_column:0)+oldLines[oldLines.length-lines.length].length-lines[0].length:this.yylloc.first_column-len};if(this.options.ranges){this.yylloc.range=[r[0],r[0]+this.yyleng-len]}this.yyleng=this.yytext.length;return this},

// When called from action, caches matched text and appends it on next action
more:function (){
"use strict";
this._more=true;return this},

// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.
reject:function (){
"use strict";
if(this.options.backtrack_lexer){this._backtrack=true}else{return this.parseError("Lexical error on line "+(this.yylineno+1)+". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})}return this},

// retain first n characters of the match
less:function (n){
"use strict";
this.unput(this.match.slice(n))},

// displays already matched input, i.e. for error messages
pastInput:function (){
"use strict";
var past=this.matched.substr(0,this.matched.length-this.match.length);return(past.length>20?"...":"")+past.substr(-20).replace(/\n/g,"")},

// displays upcoming input, i.e. for error messages
upcomingInput:function (){
"use strict";
var next=this.match;if(next.length<20){next+=this._input.substr(0,20-next.length)}return(next.substr(0,20)+(next.length>20?"...":"")).replace(/\n/g,"")},

// displays the character position where the lexing error occurred, i.e. for error messages
showPosition:function (){
"use strict";
var pre=this.pastInput();var c=new Array(pre.length+1).join("-");return pre+this.upcomingInput()+"\n"+c+"^"},

// test the lexed token: return FALSE when not a match, otherwise return token
test_match:function (match,indexed_rule){
"use strict";
var token,lines,backup;if(this.options.backtrack_lexer){backup={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done};if(this.options.ranges){backup.yylloc.range=this.yylloc.range.slice(0)}}lines=match[0].match(/(?:\r\n?|\n).*/g);if(lines){this.yylineno+=lines.length}this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:lines?lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+match[0].length};this.yytext+=match[0];this.match+=match[0];this.matches=match;this.yyleng=this.yytext.length;if(this.options.ranges){this.yylloc.range=[this.offset,this.offset+=this.yyleng]}this._more=false;this._backtrack=false;this._input=this._input.slice(match[0].length);this.matched+=match[0];token=this.performAction.call(this,this.yy,this,indexed_rule,this.conditionStack[this.conditionStack.length-1]);if(this.done&&this._input){this.done=false}if(token){return token}else if(this._backtrack){for(var k in backup){this[k]=backup[k]}return false}return false},

// return next match in input
next:function (){
"use strict";
if(this.done){return this.EOF}if(!this._input){this.done=true}var token,match,tempMatch,index;if(!this._more){this.yytext="";this.match=""}var rules=this._currentRules();for(var i=0;i<rules.length;i++){tempMatch=this._input.match(this.rules[rules[i]]);if(tempMatch&&(!match||tempMatch[0].length>match[0].length)){match=tempMatch;index=i;if(this.options.backtrack_lexer){token=this.test_match(tempMatch,rules[i]);if(token!==false){return token}else if(this._backtrack){match=false;continue}else{return false}}else if(!this.options.flex){break}}}if(match){token=this.test_match(match,rules[index]);if(token!==false){return token}return false}if(this._input===""){return this.EOF}else{return this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})}},

// return next match that has a token
lex:function lex(){
"use strict";
var r=this.next();if(r){return r}else{return this.lex()}},

// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)
begin:function begin(condition){
"use strict";
this.conditionStack.push(condition)},

// pop the previously active lexer condition state off the condition stack
popState:function popState(){
"use strict";
var n=this.conditionStack.length-1;if(n>0){return this.conditionStack.pop()}else{return this.conditionStack[0]}},

// produce the lexer rule set which is active for the currently active lexer condition state
_currentRules:function _currentRules(){
"use strict";
if(this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]){return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules}else{return this.conditions["INITIAL"].rules}},

// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available
topState:function topState(n){
"use strict";
n=this.conditionStack.length-1-Math.abs(n||0);if(n>=0){return this.conditionStack[n]}else{return"INITIAL"}},

// alias for begin(condition)
pushState:function pushState(condition){
"use strict";
this.begin(condition)},

// return the number of states currently on the stack
stateStackSize:function stateStackSize(){
"use strict";
return this.conditionStack.length},
options: {},
performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {

  addNode = function(type, arg) { 
  args = [];
  for(i=1;i<arguments.length;i++)
        args.push(arguments[i]);
  
  return new yy.MathNode(type, args);
  }; 

var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0: return 6; 
break;
case 1: return 7; 
break;
case 2: return 8; 
break;
case 3: return 9; 
break;
case 4: return 10; 
break;
case 5: return 11; 
break;
case 6: return 12; 
break;
case 7: yy_.yytext = this.matches[4]; return 14; 
break;
case 8:  return 15; 
break;
case 9: return 13; 
break;
case 10: return 34; 
break;
case 11: return 35; 
break;
case 12: return 36; 
break;
case 13: return 37; 
break;
case 14: return 38; 
break;
case 15: return 39; 
break;
case 16: return 22; 
break;
case 17: return 23; 
break;
case 18: return 24; 
break;
case 19: return 25; 
break;
case 20: return 26; 
break;
case 21: return 27; 
break;
case 22: return 28; 
break;
case 23: return 29; 
break;
case 24: return 30; 
break;
case 25: return 31; 
break;
case 26: return 32; 
break;
case 27: return 33; 
break;
case 28: return 16; 
break;
case 29: return 17; 
break;
case 30: return 18; 
break;
case 31: return 19; 
break;
case 32: return 20; 
break;
case 33: return 21; 
break;
case 34:return 40;
break;
case 35: return 41; 
break;
case 36: return 42; 
break;
case 37:return 42; 
break;
case 38:return 42; 
break;
case 39:return 42; 
break;
case 40:return 42; 
break;
case 41:return 42; 
break;
case 42:return 42; 
break;
case 43:return 42; 
break;
case 44:return 42; 
break;
case 45:return 42; 
break;
case 46:return 42; 
break;
case 47:return 42; 
break;
case 48:return 42; 
break;
case 49:return 42; 
break;
case 50:return 42; 
break;
case 51:return 42; 
break;
case 52:return 42; 
break;
case 53:return 42; 
break;
case 54:return 42; 
break;
case 55:return 42; 
break;
case 56:return 42; 
break;
case 57:return 42; 
break;
case 58:return 42; 
break;
case 59:return 42; 
break;
case 60:return 42; 
break;
case 61:return 42; 
break;
case 62:return 42; 
break;
case 63:return 42; 
break;
case 64:return 42; 
break;
case 65:return 42; 
break;
case 66:return 42; 
break;
case 67:return 42; 
break;
case 68:return 42; 
break;
case 69:return 42; 
break;
case 70:return 42; 
break;
case 71:return 42; 
break;
case 72:return 42; 
break;
case 73:  
break;
case 74:  
break;
case 75: return 5; 
break;
case 76:  
break;
}
},
rules: [/^(?:(\+))/,/^(?:(-))/,/^(?:(\\cdot))/,/^(?:(\\frac))/,/^(?:(\\sqrt))/,/^(?:(\^))/,/^(?:(\\ln))/,/^(?:((\\log)(\space|:| )*_([0-9])))/,/^(?:(\\log_))/,/^(?:(\\log))/,/^(?:(\\sinh))/,/^(?:(\\cosh))/,/^(?:(\\tanh))/,/^(?:(\\csch))/,/^(?:(\\sech))/,/^(?:(\\coth))/,/^(?:(\\sin))/,/^(?:(\\cos))/,/^(?:(\\tan))/,/^(?:(\\csc))/,/^(?:(\\sec))/,/^(?:(\\cot))/,/^(?:(\\arcsin))/,/^(?:(\\arccos))/,/^(?:(\\arctan))/,/^(?:(\\arccsc))/,/^(?:(\\arcsec))/,/^(?:(\\arccot))/,/^(?:(\\left\())/,/^(?:(\\right\)))/,/^(?:(\{))/,/^(?:(\}))/,/^(?:(\[))/,/^(?:(\]))/,/^(?:(=))/,/^(?:([0-9]+(\.[0-9]+)?\b))/,/^(?:(([a-zA-Z][a-zA-Z0-9]*)(_[a-zA-Z0-9]|_\{[a-zA-Z0-9]{2,}\})?))/,/^(?:(\\alpha))/,/^(?:(\\beta))/,/^(?:(\\delta))/,/^(?:(\\epsilon))/,/^(?:(\\varepsilon))/,/^(?:(\\eta))/,/^(?:(\\gamma))/,/^(?:(\\iota))/,/^(?:(\\kappa))/,/^(?:(\\lambda))/,/^(?:(\\mu))/,/^(?:(\\nu))/,/^(?:(\\omega))/,/^(?:(\\phi))/,/^(?:(\\varphi))/,/^(?:(\\pi))/,/^(?:(\\psi))/,/^(?:(\\rho))/,/^(?:(\\sigma))/,/^(?:(\\tau))/,/^(?:(\\theta))/,/^(?:(\\upsilon))/,/^(?:(\\xi))/,/^(?:(\\zeta))/,/^(?:(\\Delta))/,/^(?:(\\Gamma))/,/^(?:(\\Lambda))/,/^(?:(\\Omega))/,/^(?:(\\Phi))/,/^(?:(\\Pi))/,/^(?:(\\Psi))/,/^(?:(\\Sigma))/,/^(?:(\\Theta))/,/^(?:(\\Upsilon))/,/^(?:(\\Xi))/,/^(?:(\\aleph))/,/^(?:(\$))/,/^(?:(\s+))/,/^(?:$)/,/^(?:(\\ ))/],
conditions: {"ARRAY":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"inclusive":false},"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"inclusive":true}}
};
return lexer;
})();
parser.lexer = lexer;
function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();


if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = parser;
exports.Parser = parser.Parser;
exports.parse = function () { return parser.parse.apply(parser, arguments); };
}

window.Parser = parser;
